% ---------------------- %
% -- IMPORTS REQUIRED -- %
% ---------------------- %

% A
\RequirePackage{amssymb}
% C
\RequirePackage{commado}
% E
\RequirePackage{esvect}
\PassOptionsToPackage{f}{esvect}
\RequirePackage{etoolbox}
% I
\RequirePackage{ifmtarg}
% M
\RequirePackage{mathtools}
% N
\RequirePackage{nicematrix}
% T
\RequirePackage{tikz}
\RequirePackage{tnscom}
\RequirePackage{trimspaces}
% X
\RequirePackage{xstring}
% Y
\RequirePackage{yhmath}

% TikZ libraries
\usetikzlibrary{calc}


% ------------------ %
% -- POINT N LINE -- %
% ------------------ %

% Points

\newcommand\pt{\@ifstar{\@pt@star}{\@pt@no@star}}

\newcommand\@pt@no@star[1]{\mathrm{#1}}

\newcommand\@pt@star[2]{%
    \@pt@no@star{#1}_{#2}
}


% Lines

\newcommand\gline[3][O]{%
	\IfStrEqCase{#1}{%
		{O}{\left(}%
		{C}{\left[}%
		{OC}{\left(}%
		{CO}{\left[}%
	}%
	 #2 #3%		
	\IfStrEqCase{#1}{%
		{O}{\right)}%
		{C}{\right]}%
		{OC}{\right]}%
		{CO}{\right)}%
	}%
}

\newcommand\pgline[3][O]{%
    \gline[#1]{\pt{#2}}{\pt{#3}}%
}


\newcommand\hgline[2]{%
    \gline[CO]{#1}{#2}%
}

\newcommand\phgline[2]{%
    \pgline[CO]{#1}{#2}%
}


\newcommand\segment[2]{%
    \gline[C]{#1}{#2}%
}

\newcommand\psegment[2]{%
    \pgline[C]{#1}{#2}%
}


% Source
%    * https://tex.stackexchange.com/questions/511495
\let\stdparallel\parallel
\renewcommand{\parallel}{\mathrel{/\mkern-5mu/}}

\let\stdnparallel\nparallel
\renewcommand{\nparallel}{%
  \mathrel{\mathpalette\not@parallel\relax}%
}
\newcommand{\not@parallel}[2]{%
  \ooalign{\reflectbox{$\m@th#1\smallsetminus$}\cr\hfil$\m@th#1\parallel$\cr}%
}


% ------------ %
% -- VECTOR -- %
% ------------ %

\newcommand\@no@point[1]{%
    \if#1i%
        \imath%
    \else%
        \if#1j%
            \jmath%
        \else%
            #1
        \fi%
    \fi%
}

\newcommand\vect{\@ifstar{\@vect@star}{\@vect@no@star}}
\newcommand*\@vect@star[1]{\vv*{\@no@point{#1}}}
\newcommand*\@vect@no@star[1]{\vv{\@no@point{#1}}}


% ----------------- %
% -- VECTOR NORM -- %
% ----------------- %

% Source :
%    * https://tex.stackexchange.com/a/43009/6880
%
\DeclarePairedDelimiter\norm{\lVert}{\rVert}%

\let\@old@norm\norm

\renewcommand\norm[2][b]{%
	\IfEqCase{#1}{%
		{b}{\@old@norm*{#2}}%
		{s}{\@old@norm{#2}}
	}[%
        \PackageError{lymath}{unknown option}%
                             {you can use b (default) or s.}%
	]
}

\newcommand\vnorm[2][b]{%
	\norm[#1]{\vect{#2}}%
}


% --------------------- %
% -- VECTOR PRODUCTS -- %
% --------------------- %

% The dot product

%    #1 : 1st delimiter
%    #2 : 1st vector
%    #3 : inner separator
%    #4 : 2nd vector
%    #5 : 2nd delimiter

\newcommand\@dotprod@abstract@rafter[5]{%
    #1#2#3#4#5%
}


\newcommand\dotprod[3][u]{%
	\IfEqCase{#1}{%
% Usual
		{u}{%
			#2 \cdot #3%
		}%
% Big raft
		{r}{%
			\@dotprod@abstract@rafter{\left\langle\,}%
								     {#2}
								     {\,\left|\,\vphantom{#2}}%
								     {#3}%
								     {\right.\,\right\rangle}%
		}%
% Small raft
		{sr}{%
			\@dotprod@abstract@rafter{\langle\,}%
								     {#2}%
								     {\mid}%
								     {#3}%
								     {\,\rangle}%
		}%
	}[%
        \PackageError{lymath}{unknown option}%
                             {You can use u (default), a or sa.}%
	]%
}



\newcommand\vdotprod[3][u]{%
    \dotprod[#1]{\vect{#2}}{\vect{#3}}%
}


% The dot product - TO KEEP !!!!!!!

%    #1 : 1st vector
%    #2 : 2nd vector
%    #3 : operator for the products

%\newcommand\@dotprod@abstract@exp[3]{%
%    x_{#1} #3 x_{#2} + y_{#1} #3 y_{#2}%
%}




% The cross product

\newcommand\crossprod[2]{%
    #1 \wedge #2%
}

\newcommand\vcrossprod[2]{%
    \tns@apply@macro@two@args{\crossprod}{\vect}{#1}{#2}%
}


% Stupid coordinates of the cross product

\newbool{@crossprod@option@p}   % Default.
\newbool{@crossprod@option@sp}
\newbool{@crossprod@option@vp}

\newbool{@crossprod@option@b}
\newbool{@crossprod@option@sb}
\newbool{@crossprod@option@vb}

\newbool{@crossprod@option@space}   % Default.
\newbool{@crossprod@option@times}
\newbool{@crossprod@option@cdot}


% Coordinates given like that.
%
%    #1    #4
%    #2    #5
%    #3    #6
%
% #7 : symbol for the product.
%
% #8 : one of the macro \coord, \vcoord or \vcoord*.
%
% #9 : one of the the option p, sp, vp, b, sb or vb. 
\newcommand\@apply@coord@crossprod@[9]{%
    #8[#9]{%
        #2#7#6 - #3#7#5
      | #3#7#4 - #1#7#6
      | #1#7#5 - #2#7#4
    }%
}


\newcommand\@validate@crossprod@option[1]{
	\IfEqCase{#1}{%
		{p}{\booltrue{@crossprod@option@p}}%
		{sp}{\booltrue{@crossprod@option@sp}}
		{vp}{\booltrue{@crossprod@option@vp}}
		%
		{b}{\booltrue{@crossprod@option@b}}
		{sb}{\booltrue{@crossprod@option@sb}}
		{vb}{\booltrue{@crossprod@option@vb}}
		%
		{s}{\booltrue{@crossprod@option@space}}%
		{t}{\booltrue{@crossprod@option@times}}
		{c}{\booltrue{@crossprod@option@cdot}}
	}[%
        \PackageError{lymath}{unknown option}%
                             {}%
	]
}


\newcommand\coordcrossprod[7][p,s]{%
	\boolfalse{@crossprod@option@p}
	\boolfalse{@crossprod@option@sp}
	\boolfalse{@crossprod@option@vp}
	\boolfalse{@crossprod@option@b}
	\boolfalse{@crossprod@option@sb}
	\boolfalse{@crossprod@option@vb}
	\boolfalse{@crossprod@option@space}
	\boolfalse{@crossprod@option@times}
	\boolfalse{@crossprod@option@cdot}
	%
	\def\@coord@option{NOTHING}%
	\def\@exp@symbol{NOTHING}%
	%
	\DoWithCSL\@validate@crossprod@option{#1}
	%
	\ifbool{@crossprod@option@p}{%
		\def\@coord@option{p}%
	}{}%
	%
	\ifbool{@crossprod@option@sp}{%
		\def\@coord@option{sp}%
	}{}%
	%
	\ifbool{@crossprod@option@vp}{%
		\def\@coord@option{vp}%
	}{}%
	%
	\ifbool{@crossprod@option@b}{%
		\def\@coord@option{b}%
	}{}%
	%
	\ifbool{@crossprod@option@sb}{%
		\def\@coord@option{sb}%
	}{}%
	%
	\ifbool{@crossprod@option@vb}{%
		\def\@coord@option{vb}%
	}{}%
	%
	\ifbool{@crossprod@option@space}{%
		\def\@exp@symbol{\,}%	
	}{}%
	%
	\ifbool{@crossprod@option@times}{%
		\def\@exp@symbol{\times}%	
	}{}%
	%
	\ifbool{@crossprod@option@cdot}{%
		\def\@exp@symbol{\cdot}%	
	}{}%
    %
    \ifbool{@crossprod@option@sp}{}{%
    	\ifbool{@crossprod@option@vp}{}{%
			\ifbool{@crossprod@option@b}{}{%
				\ifbool{@crossprod@option@sb}{}{%
					\ifbool{@crossprod@option@vb}{}{%
						\def\@coord@option{p}% Default
					}%
				}%
			}%
		}%
    }%
    %
    \ifbool{@crossprod@option@times}{}{%
    	\ifbool{@crossprod@option@cdot}{}{%
			\def\@exp@symbol{\,}% Default
		}%
    }%
    %
    \@apply@coord@crossprod@{#2}{#3}{#4}% Vector 1
                            {#5}{#6}{#7}% Vector 2
                            {\@exp@symbol}%
                            {\coord}{\@coord@option}%
}


% Source
%    * https://tex.stackexchange.com/a/548662/6880

\newcommand\@ccrossprod@label@[1]{%
    {\tiny$\substack{-\\#1}$}%
}


\newcommand\calccrossprod{\@ifstar{\@calccrossprod@star}{\@calccrossprod@no@star}}


\newcommand\@calccrossprod@star[9][vec]{%
    \IfEqCase{#1}{
        {vec}{
            \begin{vNiceMatrix}[first-row]
                {\tiny#2}         && {\tiny#6}         \\
        }{novec}{
                \begin{vNiceMatrix}
        }
    }[
        \PackageError{lymath}{unknown option}%
                             {You can use vec (default) or novec.}
    ]%
                #3                && #7                \\
                #4                && #8                \\
                #5                && #9                \\
                {\color{blue} #3} && {\color{blue} #7}
            \end{vNiceMatrix}
}


\newcommand\@calccrossprod@no@star[9][vec]{%
    \IfEqCase{#1}{
        {vec}{
            \begin{vNiceMatrix}[first-row]
                {\tiny#2}         && {\tiny#6}         \\
        }{novec}{
                \begin{vNiceMatrix}
        }
    }[
        \PackageError{lymath}{unknown option}%
                             {You can use vec (default) or novec.}
    ]%
                   #3                && #7                \\
                #4                && #8                \\
                #5                && #9                \\
                {\color{blue} #3} && {\color{blue} #7}
                %%
                \CodeAfter
                \begin{tikzpicture}
                    \path (2-1.east) 
                          -- node[below = 0.3em,
                                  blue,
                                  circle,
                                  inner sep = .4pt]
                             (minusone) {\@ccrossprod@label@{1}}
                          (2-3.west);
                    \draw [blue,->]
                          let \p1 = ($(minusone.east) - (minusone.center)$) in 
                               ([xshift = 0.5mm,yshift=-0.05mm]2-1.east)
                               to[out = 0, in = 137.5]
                               ([yshift=-0.05mm]minusone.50)
                                  arc[start angle = 50,
                                   end angle = -230,
                                   radius = \x1] 
                               to[out = 42.5, in =190]
                               ([xshift = -0.3mm,yshift=-0.05mm]2-1.east-|2-3.west);
                    %%
                     \path (3-1.east) 
                          -- node[below = 0.3em,
                                  red,
                                  circle,
                                  inner sep = .4pt] 
                             (minustwo) {\@ccrossprod@label@{2}}
                          (3-3.west);
                    \draw [red,->]
                          let \p1 = ($(minustwo.east) - (minustwo.center)$) in 
                               ([xshift=0.5mm,yshift=-0.6mm]3-1.east)
                               to[out = 0, in = 137.5]
                               ([yshift=-0.6mm]minustwo.50)
                                  arc[start angle = 50,
                                   end angle = -230,
                                   radius = \x1] 
                               to[out = 42.5, in =190] 
                               ([xshift = -0.3mm,yshift=-0.6mm]3-1.east-|3-3.west);
                    %%
                    \path (1-1.east) 
                          -- node[below = 0.3em,
                                  orange,
                                  circle,
                                  inner sep = .4pt] 
                             (minus) {\@ccrossprod@label@{3}}
                          (1-3.west);
                    \draw [orange,->]
                          let \p1 = ($(minus.east) - (minus.center)$) in 
                               ([xshift=0.5mm]1-1.east)
                               to[out = 0, in = 137.5]
                               (minus.50)
                                  arc[start angle = 50,
                                   end angle = -230,
                                   radius = \x1] 
                               to[out = 42.5, in =190] 
                               ([xshift=-0.3mm]1-1.east-|1-3.west);
                \end{tikzpicture} 
            \end{vNiceMatrix}
}


\newcommand\vcalccrossprod{\@ifstar{\@vcalccrossprod@star}{\@vcalccrossprod@no@star}}

\newcommand\@vcalccrossprod@no@star[9][vec]{%
    \calccrossprod[#1]{\vect{#2}}{#3}{#4}{#5}{\vect{#6}}{#7}{#8}{#9}%
}

\newcommand\@vcalccrossprod@star[9][vec]{%
    \calccrossprod*[#1]{\vect{#2}}{#3}{#4}{#5}{\vect{#6}}{#7}{#8}{#9}%
}


% --------------------------- %
% -- VECTOR 2D COLINEARITY -- %
% --------------------------- %

%   #1 : option for the formatting
%
%   #2  #5		u  v
%   
%   #3  #6		x  x'
%   #4  #7      y  y'

\newcommand\calcdetplane{\@ifstar{\@calcdetplane@star}{\@calcdetplane@no@star}}


%   #1 : option for the formatting
%
%   #2  #5		u  v
%   
%   #3  #6		x  x'
%   #4  #7      y  y'

\newcommand\@calcdetplane@no@star[7][vec]{%
    \IfEqCase{#1}{%
% WARNING !
%   
%   #1 : symbol for the product
%
%   #2  #3		x  x'
%   #4  #5      y  y'
        {exp}{%
            \tns@prop@prod{\,}%
                          {#3}{#4}%
                          {#6}{#7}%
        }{cexp}{%
            \tns@prop@prod{\cdot}%
                          {#3}{#4}%
                          {#6}{#7}%
        }{texp}{%
            \tns@prop@prod{\times}%
                          {#3}{#4}%
                          {#6}{#7}%
        }{vec}{%
            \tns@det@plane@deco{#1}%
                               {#2}{#3}{#4}%
                               {#5}{#6}{#7}%
        }{novec}{%
            \tns@det@plane@deco{#1}%
                               {#2}{#3}{#4}%
                               {#5}{#6}{#7}%
        }%
    }[
    	\PackageError{tnsgeo}{unknown option}%
                             {You can use vec (default), novec, exp, cexp or sexp.}
    ]%
}


%   #1 : option for the formatting
%
%   #2  #5		u  v
%   
%   #3  #6		x  x'
%   #4  #7      y  y'

\newcommand\@calcdetplane@star[7][vec]{%
% WARNING !
%   
%   #1 : symbol for the product
%
%   #2  #3		x  x'
%   #4  #5      y  y'
    \IfEqCase{#1}{%
        {exp}{%
            \tns@prop@prod{\,}%
                          {#3}{#6}%
                          {#4}{#7}%
        }{cexp}{%
            \tns@prop@prod{\cdot}%
                          {#3}{#6}%
                          {#4}{#7}%
        }{texp}{%
            \tns@prop@prod{\times}%
                          {#3}{#6}%
                          {#4}{#7}%
        }{vec}{%
            \tns@det@plane@no@deco{#1}%
                                  {#2}{#3}{#4}%
                                  {#5}{#6}{#7}%
        }{novec}{%
            \tns@det@plane@no@deco{#1}%
                                  {#2}{#3}{#4}%
                                  {#5}{#6}{#7}%
        }%
    }[
    	\PackageError{tnsgeo}{unknown option}%
                             {You can use vec (default), novec, exp, cexp or sexp.}
    ]%
}


\newcommand\vcalcdetplane{\@ifstar{\@vcalcdetplane@star}{\@vcalcdetplane@no@star}}


\newcommand\@vcalcdetplane@star[7][vec]{%
    \@calcdetplane@star[#1]{\vect{#2}}{#3}{#4}%
                           {\vect{#5}}{#6}{#7}%
}


\newcommand\@vcalcdetplane@no@star[7][vec]{%
    \@calcdetplane@no@star[#1]{\vect{#2}}{#3}{#4}%
                              {\vect{#5}}{#6}{#7}%
}


% --------------------------- %
% -- CARTESIAN COORDINATES -- %
% --------------------------- %

\newcommand\coord[2][p]{%
    \IfEqCase{#1}{%
        {p}{%
		    \left( \,%
% ARG 1  = Separator: |
% ARG 2  = All parts: what the user types !
% ARG 3  = Before   : nothing here
% ARG 4  = Between  : ;
% ARG 5  = After    : nothing here
% OPTION = Ornament : macro to apply to each item
       			\tns@multi@args{|}{#2}{}{\tnsmathsep}{}%
     		\, \right)%
        }{sp}{%
            (\tns@multi@args{|}{#2}{}{\tnsmathsep}{})%
        }{b}{%
		    \left[ \,%
       			\tns@multi@args{|}{#2}{}{\tnsmathsep}{}%
     		\, \right]%
        }{sb}{%
            [\tns@multi@args{|}{#2}{}{\tnsmathsep}{}]%
        }{vp}{%
            \tns@multi@args{|}{#2}{\begin{pmatrix}}{\\}{\end{pmatrix}}%
        }{vb}{%
            \tns@multi@args{|}{#2}{\begin{bNiceMatrix}}{\\}{\end{bNiceMatrix}}%
        }%
    }[
    	\PackageError{lymath}{unknown option}%
                             {You can use p (default), sp, b, sb, vp or vb.}
    ]%
}


\newcommand\pcoord{\@ifstar{\@extra@coord}{\@pcoord@no@star}}

\newcommand\@pcoord@no@star[3][p]{%
	\pt{#2}\coord[#1]{#3}%
}


\newcommand\vcoord{\@ifstar{\@extra@coord}{\@vcoord@no@star}}

\newcommand\@vcoord@no@star[3][p]{%
	\vect{#2}\coord[#1]{#3}%
}


\newcommand\@extra@coord[3][p]{%
	#2\coord[#1]{#3}%
}


% -------------------- %
% -- CARTESIAN AXES -- %
% -------------------- %

% Sources : see the sources of the macros for continued fractions.

% General naming of axes
\def\@axes@comafy@#1|#2\@nil{%
    \@ifmtarg{#2}{%
        #1%
    }{%
        #1 \tnsmathsubsep{} \@axes@comafy@#2\@nil%
    }%
}

\newcommand\axes{\@ifstar{\@axes@star}{\@axes@no@star}}

\newcommand\@axes@no@star[1]{%
    \@axes@no@star@splitter@#1|\@nil%
}
\def\@axes@no@star@splitter@#1|#2\@nil{%
    \ensuremath{\tns@generic@interval@ext{(}{#1}{\tnsmathsep{}}{\@axes@comafy@#2\@nil}{)}}%
}

\newcommand\@axes@star[1]{%
    \@axes@star@splitter@#1|\@nil%
}
\def\@axes@star@splitter@#1|#2\@nil{%
    \ensuremath{\tns@generic@interval@semi@ext{(}{#1}{\tnsmathsep{}}{\@axes@comafy@#2\@nil}{)}}%
}

% Geometric points for naming some axes
\def\@axes@comafy@gptify@#1|#2\@nil{%
    \@ifmtarg{#2}{%
        \pt{#1}%
    }{%
        \pt{#1} \tnsmathsubsep{} \@axes@comafy@gptify@#2\@nil%
    }%
}

\newcommand\paxes[1]{%
    \@paxes@splitter@#1|\@nil%
}
\def\@paxes@splitter@#1|#2\@nil{%
    \ensuremath{\tns@generic@interval@ext{(}{\pt{#1}}{\tnsmathsep{}}{\@axes@comafy@gptify@#2\@nil}{)}}%
}

% Vectors for naming some axes
\def\@axes@comafy@vectify@#1|#2\@nil{%
    \@ifmtarg{#2}{%
        \vect{\trim@spaces{#1}}%
    }{%
        \vect{\trim@spaces{#1}} \tnsmathsubsep{} \@axes@comafy@vectify@#2\@nil%
    }%
}

\newcommand\vaxes[1]{%
    \@vaxes@splitter@#1|\@nil%
}
\def\@vaxes@splitter@#1|#2\@nil{%
    \ensuremath{\tns@generic@interval@ext{(}{#1}{\tnsmathsep{}}{\@axes@comafy@vectify@#2\@nil}{)}}%
}

% Geometric points and vectors for naming some axes
\newcommand\pvaxes[1]{%
    \@pvaxes@splitter@#1|\@nil%
}
\def\@pvaxes@splitter@#1|#2\@nil{%
    \ensuremath{\tns@generic@interval@ext{(}{\pt{#1}}{\tnsmathsep{}}{\@axes@comafy@vectify@#2\@nil}{)}}%
}


% --------- %
% -- ARC -- %
% --------- %

\newcommand\circarc{\@ifstar{\@circarc@star}{\@circarc@no@star}}

\newcommand*\@circarc@star[2]{%
	\wideparen{\@no@point{#1}}\vphantom{#1}_{#2}%
}

\newcommand*\@circarc@no@star[1]{%
	\wideparen{\@no@point{#1}}%
}


% --------------------- %
% -- ANGLE GEOMETRIC -- %
% --------------------- %

% Source : http://forum.mathematex.net/latex-f6/arc-dont-le-nom-comporte-un-indice-t12392.html#p120204

\newcommand\anglein{\@ifstar{\@anglein@star}{\@anglein@no@star}}

\newcommand*\@anglein@star[2]{%
	\widehat{\@no@point{#1}}\vphantom{#1}_{#2}%
}

\newcommand*\@anglein@no@star[1]{%
	\widehat{\@no@point{#1}}%
}


% -------------------- %
% -- ANGLE ORIENTED -- %
% -------------------- %

\newcommand\angleorient[3][p]{%
	\IfEqCase{#1}{%
% Big parenthesis (no hat)
		{p}{%
			\tns@generic@interval@ext{(}{\, #2}{\tnsmathsep}{#3\, }{)}%
		}%
% Small parenthesis (no hat)
		{sp}{%
			\tns@generic@interval@semi@ext{(}{\, #2}{\tnsmathsep}{#3\, }{)}%
		}%
% Hat - Big parenthesis
		{h}{%
			\widehat{\angleorient{#2}{#3}}%
		}%
% Hat - Small parenthesis
		{sh}{%
			\widehat{\angleorient[sp]{#2}{#3}}%
		}%
	}[%
        \PackageError{lymath}{unknown option}%
                             {You can use p (default), sp, h or sh.}%
	]%
}


\newcommand\vangleorient[3][p]{%
	\angleorient[#1]{\vect{#2}}{\vect{#3}}%
}
